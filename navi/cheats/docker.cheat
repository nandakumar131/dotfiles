% docker

;# Remove an image
;docker image rm <image_id>

;# Delete an image from the local image store
;docker rmi <image_id>

;# Force clean none/dangling images
;docker rmi $(docker images --filter "dangling=true" -q --no-trunc) -f

;# Stop a running container through SIGTERM
;docker stop <container_id>

;# Stop a running container through SIGKILL
;docker kill <container_id>

;# List the networks
;docker network ls

;# Delete all running and stopped containers
;docker rm -f $(docker ps -aq)

# Create a new bash process inside the container and connect it to the terminal
docker exec -it <container_id> bash

# Print the last lines of a container's logs and following its logs
docker logs --tail 100 <container_id> -f


$ image_id: docker images --- --headers 1 --column 3
$ container_id: docker ps --- --headers 1 --column 1



% docker-compose

# Print the last lines of a service's logs and following its logs
docker-compose logs -f --tail 100 <service_name>
